{"ast":null,"code":"var _jsxFileName = \"D:\\\\JalaGatoProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './ProductList';\nimport ShoppingCart from './ShoppingCart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState(null);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://dummyjson.com/products');\n        const jsonData = await response.json();\n        console.log(jsonData);\n        setProducts(jsonData);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once\n\n  console.log(products);\n  const addToCart = product => {\n    setCart([...cart, product]);\n  };\n  const removeFromCart = product => {\n    setCart(cart.filter(item => item.id !== product.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products,\n      addToCart: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShoppingCart, {\n      cart: cart,\n      removeFromCart: removeFromCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0Gi9k1pKdhpYZjSU6nckigHWxrk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","ShoppingCart","jsxDEV","_jsxDEV","App","_s","products","setProducts","cart","setCart","fetchData","response","fetch","jsonData","json","console","log","error","addToCart","product","removeFromCart","filter","item","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/JalaGatoProject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductList from './ProductList';\nimport ShoppingCart from './ShoppingCart';\n\nconst App = () => {\n  const [products, setProducts] = useState(null);\n  const [cart, setCart] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://dummyjson.com/products');\n        const jsonData = await response.json();\n        console.log(jsonData);\n        setProducts(jsonData);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once\n\n  console.log(products);\n\n  const addToCart = (product) => {\n    setCart([...cart, product]);\n  };\n\n  const removeFromCart = (product) => {\n    setCart(cart.filter(item => item.id !== product.id));\n  };\n\n  return (\n    <div>\n      <h1>Product List</h1>\n      <ProductList products={products} addToCart={addToCart} />\n      <h1>Shopping Cart</h1>\n      <ShoppingCart cart={cart} removeFromCart={removeFromCart} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;QAC9D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrBN,WAAW,CAACM,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERK,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;EAErB,MAAMY,SAAS,GAAIC,OAAO,IAAK;IAC7BV,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEW,OAAO,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAID,OAAO,IAAK;IAClCV,OAAO,CAACD,IAAI,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzB,OAAA,CAACH,WAAW;MAACM,QAAQ,EAAEA,QAAS;MAACY,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDzB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzB,OAAA,CAACF,YAAY;MAACO,IAAI,EAAEA,IAAK;MAACY,cAAc,EAAEA;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}